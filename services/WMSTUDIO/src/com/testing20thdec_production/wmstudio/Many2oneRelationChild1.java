/*Copyright (c) 2017-2018 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/
package com.testing20thdec_production.wmstudio;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.List;
import java.util.Objects;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.IdClass;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;

/**
 * Many2oneRelationChild1 generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`Many2One_RelationChild1`")
@IdClass(Many2oneRelationChild1Id.class)
public class Many2oneRelationChild1 implements Serializable {

    private Byte byteId;
    private String stringId;
    private String column3;
    private List<Many2oneCompParent> many2oneCompParents;

    @Id
    @Column(name = "`Byte ID`", nullable = false, scale = 0, precision = 2)
    public Byte getByteId() {
        return this.byteId;
    }

    public void setByteId(Byte byteId) {
        this.byteId = byteId;
    }

    @Id
    @Column(name = "`String Id`", nullable = false, length = 20)
    public String getStringId() {
        return this.stringId;
    }

    public void setStringId(String stringId) {
        this.stringId = stringId;
    }

    @Column(name = "`COLUMN3`", nullable = true, length = 255)
    public String getColumn3() {
        return this.column3;
    }

    public void setColumn3(String column3) {
        this.column3 = column3;
    }

    @JsonInclude(Include.NON_EMPTY)
    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.REMOVE, mappedBy = "many2oneRelationChild1")
    public List<Many2oneCompParent> getMany2oneCompParents() {
        return this.many2oneCompParents;
    }

    public void setMany2oneCompParents(List<Many2oneCompParent> many2oneCompParents) {
        this.many2oneCompParents = many2oneCompParents;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Many2oneRelationChild1)) return false;
        final Many2oneRelationChild1 many2oneRelationChild1 = (Many2oneRelationChild1) o;
        return Objects.equals(getByteId(), many2oneRelationChild1.getByteId()) &&
                Objects.equals(getStringId(), many2oneRelationChild1.getStringId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getByteId(),
                getStringId());
    }
}

