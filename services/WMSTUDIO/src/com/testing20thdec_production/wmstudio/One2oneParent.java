/*Copyright (c) 2017-2018 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/
package com.testing20thdec_production.wmstudio;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.sql.Timestamp;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToOne;
import javax.persistence.Table;

import org.hibernate.annotations.Type;
import org.joda.time.LocalDateTime;

import com.wavemaker.runtime.data.annotations.WMValueInject;
import com.wavemaker.runtime.data.replacers.Scope;
import com.wavemaker.runtime.data.replacers.providers.VariableType;

/**
 * One2oneParent generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`One2One_Parent`")
public class One2oneParent implements Serializable {

    private Byte byteId;
    @WMValueInject( type = VariableType.SERVER, name = "USER_NAME", scopes = { Scope.INSERT, Scope.UPDATE })
    private String charCol;
    @Type(type = "DateTime")
    private LocalDateTime datetimeCol;
    private Timestamp timestampCol;
    private One2oneChild one2oneChild;

    @Id
    @Column(name = "`Byte ID`", nullable = false, scale = 0, precision = 2)
    public Byte getByteId() {
        return this.byteId;
    }

    public void setByteId(Byte byteId) {
        this.byteId = byteId;
    }

    @Column(name = "`Char Col`", nullable = true, length = 1)
    public String getCharCol() {
        return this.charCol;
    }

    public void setCharCol(String charCol) {
        this.charCol = charCol;
    }

    @Column(name = "`Datetime Col`", nullable = true)
    public LocalDateTime getDatetimeCol() {
        return this.datetimeCol;
    }

    public void setDatetimeCol(LocalDateTime datetimeCol) {
        this.datetimeCol = datetimeCol;
    }

    @Column(name = "`Timestamp Col`", nullable = true)
    public Timestamp getTimestampCol() {
        return this.timestampCol;
    }

    public void setTimestampCol(Timestamp timestampCol) {
        this.timestampCol = timestampCol;
    }

    @OneToOne(fetch = FetchType.EAGER, mappedBy = "one2oneParent")
    public One2oneChild getOne2oneChild() {
        return this.one2oneChild;
    }

    public void setOne2oneChild(One2oneChild one2oneChild) {
        this.one2oneChild = one2oneChild;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof One2oneParent)) return false;
        final One2oneParent one2oneParent = (One2oneParent) o;
        return Objects.equals(getByteId(), one2oneParent.getByteId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getByteId());
    }
}

